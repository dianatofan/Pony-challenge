{"version":3,"sources":["components/Slider.jsx","components/Maze.jsx","utils/icons.js","assets/keyboard.svg","assets/up.svg","assets/down.svg","assets/left.svg","assets/right.svg","utils/CONSTANTS.js","redux/App/app.types.js","redux/App/app.reducer.js","redux/Maze/maze.types.js","redux/Maze/maze.reducer.js","redux/rootReducer.js","redux/store.js","redux/Maze/maze.actions.js","utils/api.js","redux/App/app.actions.js","hooks/useKeypress.js","assets/gameOver.gif","assets/gameWon.gif","App.jsx","index.js"],"names":["Slider","id","name","min","max","value","onChange","useEffect","range","document","getElementById","style","background","setValue","className","htmlFor","type","defaultValue","e","target","Cell","cell","width","walls","isPony","isDomokun","isExit","join","height","Row","row","map","i","Maze","data","rows","maze","size","j","key","pony","domokun","push","createRows","onKeyPress","ev","console","log","icons","keyboard","up","down","left","right","BASE_URL","SET_GAME_OVER","SET_GAME_WON","RESET_GAME","INITIAL_STATE","isGameWon","reducer","state","action","CREATE_MAZE_REQUEST","CREATE_MAZE_SUCCESS","CREATE_MAZE_FAILURE","GET_MAZE_REQUEST","GET_MAZE_SUCCESS","GET_MAZE_FAILURE","MAKE_MOVE_REQUEST","MAKE_MOVE_SUCCESS","MAKE_MOVE_FAILURE","RESET_MAZE","mazeId","mazeContent","isLoading","error","rootReducer","combineReducers","app","appReducer","mazeReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","createMazeSuccess","createMazeFailure","getMazeSuccess","getMazeFailure","makeMoveSuccess","makeMoveFailure","resetMaze","createMaze","a","difficulty","dispatch","createMazeRequest","fetch","method","headers","Accept","body","JSON","stringify","parseInt","response","json","content","maze_id","Error","getMaze","getMazeRequest","then","makeNextMove","direction","useKeypress","getState","onKeyup","addEventListener","removeEventListener","connect","resetGame","props","useState","setWidth","setHeight","setDifficulty","gameMode","setGameMode","onClick","checked","src","alt","gameWon","gameOver","ReactDOM","render"],"mappings":"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","file":"static/js/main.9aa90ae4.chunk.js","sourcesContent":["import \"./Slider.scss\";\nimport { useEffect } from \"react\";\n\nexport const Slider = ({ id, name, min, max, value, onChange }) => {\n  // Function that changes the background color of the range input track (before and after the slider thumb)\n  const setValue = () => {\n    const range = document.getElementById(id);\n    const value = ((range.value - range.min) / (range.max - range.min)) * 100;\n    range.style.background = `linear-gradient(to right, #eeddf1 0%,  #eeddf1 ${\n      value / 2\n    }%, #eeddf1 ${value}%,  #35023b ${value}%,  #35023b 100%)`;\n  };\n\n  useEffect(() => {\n    if (value) {\n      setValue();\n    }\n  }, [value]);\n\n  return (\n    <div className=\"slider\">\n      <label htmlFor={id}>{name}</label>\n      <input\n        type=\"range\"\n        className=\"slider__input\"\n        id={id}\n        name={name}\n        min={min}\n        max={max}\n        defaultValue={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n      <label>{value}</label>\n    </div>\n  );\n};\n","import \"./Maze.scss\";\n\nconst createRows = (maze) => {\n  let id = 0;\n  const [width, height] = maze.size;\n  const rows = [];\n\n  for (let i = 0; i < height; i++) {\n    const row = [];\n    for (let j = 0; j < width; j++) {\n      const cell = {\n        key: id,\n        walls: maze.data[id],\n        isPony: id === maze.pony[0],\n        isDomokun: id === maze.domokun[0],\n        isExit: id === maze[\"end-point\"][0],\n      };\n      // element[\"key\"] = id;\n      // element[\"walls\"] = data[id];\n      // element[\"isPony\"] = id === pony;\n      // element[\"isDomokun\"] = id === domokun;\n      // element[\"isExit\"] = id === dataArr[\"end-point\"];\n      // element[\"isExitPath\"] = exitPath.includes(id);\n      // element[\"height\"] = height;\n      if (i === height - 1) {\n        cell[\"walls\"].push(\"south\");\n      }\n      if (j === width - 1) {\n        cell[\"walls\"].push(\"east\");\n      }\n      row.push(cell);\n      id++;\n    }\n    rows.push(row);\n  }\n  return rows;\n};\n\nconst Cell = ({ cell, width }) => {\n  const { walls, isPony, isDomokun, isExit } = cell;\n\n  return (\n    <div\n      className={`cell ${walls.join(\" \")}`}\n      style={{ width: `${70 / width}vmin`, height: `${70 / width}vmin` }}\n    >\n      {isPony && <span className=\"pony\" />}\n      {isDomokun && <span className=\"domokun\" />}\n      {isExit && <span className=\"door\" />}\n    </div>\n  );\n};\n\nconst Row = ({ row, width }) =>\n  row.map((cell, i) => <Cell key={i} cell={cell} width={width} />);\n\nexport const Maze = ({ data }) => {\n  const rows = createRows(data);\n\n  return (\n    <div className=\"maze\" onKeyPress={(ev) => console.log(ev)}>\n      {rows.map((row, i) => (\n        <div className=\"row\" key={i}>\n          <Row key={i} row={row} width={data.size[0]} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import keyboard from \"../assets/keyboard.svg\";\nimport up from \"../assets/up.svg\";\nimport down from \"../assets/down.svg\";\nimport left from \"../assets/left.svg\";\nimport right from \"../assets/right.svg\";\n\nexport const icons = {\n  keyboard,\n  up,\n  down,\n  left,\n  right,\n};\n","export default __webpack_public_path__ + \"static/media/keyboard.0b2ea240.svg\";","export default __webpack_public_path__ + \"static/media/up.5854c251.svg\";","export default __webpack_public_path__ + \"static/media/down.18785dbf.svg\";","export default __webpack_public_path__ + \"static/media/left.c9706021.svg\";","export default __webpack_public_path__ + \"static/media/right.e24ccab8.svg\";","export const BASE_URL =\n  \"https://ponychallenge.trustpilot.com/pony-challenge/maze\";\n","export const SET_GAME_OVER = \"SET_GAME_OVER\";\nexport const SET_GAME_WON = \"SET_GAME_WON\";\nexport const RESET_GAME = \"RESET_GAME\";\n","import { SET_GAME_OVER, SET_GAME_WON, RESET_GAME } from \"./app.types\";\n\nconst INITIAL_STATE = {\n  isGameWon: null,\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_GAME_OVER:\n      return {\n        ...state,\n        isGameWon: false,\n      };\n    case SET_GAME_WON:\n      return {\n        ...state,\n        isGameWon: true,\n      };\n    case RESET_GAME:\n      return {\n        ...state,\n        isGameWon: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const CREATE_MAZE_REQUEST = \"CREATE_MAZE_REQUEST\";\nexport const CREATE_MAZE_SUCCESS = \"CREATE_MAZE_SUCCESS\";\nexport const CREATE_MAZE_FAILURE = \"CREATE_MAZE_FAILURE\";\n\nexport const GET_MAZE_REQUEST = \"GET_MAZE_REQUEST\";\nexport const GET_MAZE_SUCCESS = \"GET_MAZE_SUCCESS\";\nexport const GET_MAZE_FAILURE = \"GET_MAZE_FAILURE\";\n\nexport const MAKE_MOVE_REQUEST = \"MAKE_MOVE_REQUEST\";\nexport const MAKE_MOVE_SUCCESS = \"MAKE_MOVE_SUCCESS\";\nexport const MAKE_MOVE_FAILURE = \"MAKE_MOVE_FAILURE\";\n\nexport const RESET_MAZE = \"RESET_MAZE\";\n","import {\n  CREATE_MAZE_REQUEST,\n  CREATE_MAZE_SUCCESS,\n  CREATE_MAZE_FAILURE,\n  GET_MAZE_REQUEST,\n  GET_MAZE_SUCCESS,\n  GET_MAZE_FAILURE,\n  RESET_MAZE,\n  MAKE_MOVE_REQUEST,\n  MAKE_MOVE_SUCCESS,\n  MAKE_MOVE_FAILURE,\n} from \"./maze.types\";\n\nconst INITIAL_STATE = {\n  mazeId: null,\n  mazeContent: null,\n  isLoading: false,\n  error: null,\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_MAZE_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case CREATE_MAZE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        mazeId: action.data,\n      };\n    case CREATE_MAZE_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        mazeId: null,\n        error: action.data,\n      };\n    case GET_MAZE_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_MAZE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        mazeContent: action.data,\n      };\n    case GET_MAZE_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        mazeContent: null,\n        error: action.data,\n      };\n    case MAKE_MOVE_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case MAKE_MOVE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case MAKE_MOVE_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.data,\n      };\n    case RESET_MAZE:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\n\nimport appReducer from \"./App/app.reducer\";\nimport mazeReducer from \"./Maze/maze.reducer\";\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  maze: mazeReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import {\n  CREATE_MAZE_REQUEST,\n  CREATE_MAZE_SUCCESS,\n  CREATE_MAZE_FAILURE,\n  GET_MAZE_REQUEST,\n  GET_MAZE_SUCCESS,\n  GET_MAZE_FAILURE,\n  RESET_MAZE,\n  MAKE_MOVE_REQUEST,\n  MAKE_MOVE_SUCCESS,\n  MAKE_MOVE_FAILURE,\n} from \"./maze.types\";\n\nexport const createMazeRequest = (data) => ({\n  type: CREATE_MAZE_REQUEST,\n  data,\n});\n\nexport const createMazeSuccess = (data) => ({\n  type: CREATE_MAZE_SUCCESS,\n  data,\n});\n\nexport const createMazeFailure = (data) => ({\n  type: CREATE_MAZE_FAILURE,\n  data,\n});\n\nexport const getMazeRequest = (data) => ({\n  type: GET_MAZE_REQUEST,\n  data,\n});\n\nexport const getMazeSuccess = (data) => ({\n  type: GET_MAZE_SUCCESS,\n  data,\n});\n\nexport const getMazeFailure = (data) => ({\n  type: GET_MAZE_FAILURE,\n  data,\n});\n\nexport const makeMoveRequest = (data) => ({\n  type: MAKE_MOVE_REQUEST,\n  data,\n});\n\nexport const makeMoveSuccess = (data) => ({\n  type: MAKE_MOVE_SUCCESS,\n  data,\n});\n\nexport const makeMoveFailure = (data) => ({\n  type: MAKE_MOVE_FAILURE,\n  data,\n});\n\nexport const resetMaze = () => ({\n  type: RESET_MAZE,\n});\n","import { BASE_URL } from \"./CONSTANTS\";\nimport store from \"../redux/store\";\nimport {\n  createMazeRequest,\n  createMazeSuccess,\n  createMazeFailure,\n  getMazeRequest,\n  getMazeSuccess,\n  getMazeFailure,\n  resetMaze,\n  makeMoveFailure,\n  makeMoveRequest,\n  makeMoveSuccess,\n} from \"../redux/Maze/maze.actions\";\nimport { setGameOver, setGameWon } from \"../redux/App/app.actions\";\n\nexport const createMaze = async ({ width, height, difficulty }) => {\n  try {\n    store.dispatch(createMazeRequest());\n    const response = await fetch(`${BASE_URL}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        \"maze-width\": parseInt(width),\n        \"maze-height\": parseInt(height),\n        \"maze-player-name\": \"Twilight Sparkle\",\n        difficulty: parseInt(difficulty),\n      }),\n    });\n    const content = await response.json();\n    store.dispatch(createMazeSuccess(content.maze_id));\n  } catch (e) {\n    store.dispatch(createMazeFailure(e));\n    return new Error(e);\n  }\n};\n\nexport const getMaze = async (mazeId) => {\n  try {\n    store.dispatch(getMazeRequest());\n    await fetch(`${BASE_URL}/${mazeId}`)\n      .then((response) => response.json())\n      .then((json) => {\n        store.dispatch(getMazeSuccess(json));\n      });\n  } catch (e) {\n    store.dispatch(getMazeFailure(e));\n    return new Error(e);\n  }\n};\n\nexport const makeNextMove = async (mazeId, direction) => {\n  try {\n    store.dispatch(makeMoveRequest(direction));\n    const response = await fetch(`${BASE_URL}/${mazeId}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        direction,\n      }),\n    });\n    const content = await response.json();\n    if (content.state === \"active\") {\n      await getMaze(mazeId);\n      store.dispatch(makeMoveSuccess(direction));\n    } else {\n      store.dispatch(resetMaze());\n      if (content.state === \"won\") {\n        store.dispatch(setGameWon());\n      } else {\n        store.dispatch(setGameOver());\n      }\n    }\n  } catch (e) {\n    store.dispatch(makeMoveFailure(e));\n    return new Error(e);\n  }\n};\n","import { SET_GAME_OVER, SET_GAME_WON, RESET_GAME } from \"./app.types\";\n\nexport const setGameOver = () => ({\n  type: SET_GAME_OVER,\n});\n\nexport const setGameWon = () => ({\n  type: SET_GAME_WON,\n});\n\nexport const resetGame = () => ({\n  type: RESET_GAME,\n});\n","import { useEffect } from \"react\";\nimport store from \"../redux/store\";\n\nexport const useKeypress = (key, action) => {\n  useEffect(() => {\n    if (store.getState().maze.mazeContent) {\n      function onKeyup(e) {\n        if (e.key === key) action();\n      }\n      window.addEventListener(\"keyup\", onKeyup);\n      return () => window.removeEventListener(\"keyup\", onKeyup);\n    }\n  }, [action, key]);\n};\n","export default __webpack_public_path__ + \"static/media/gameOver.d8daa31f.gif\";","export default __webpack_public_path__ + \"static/media/gameWon.a4cc3037.gif\";","import { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport { Slider } from \"./components/Slider\";\nimport { Maze } from \"./components/Maze\";\nimport { icons } from \"./utils/icons\";\nimport { connect } from \"react-redux\";\nimport { createMaze, getMaze, makeNextMove } from \"./utils/api\";\nimport { useKeypress } from \"./hooks/useKeypress\";\nimport { resetMaze } from \"./redux/Maze/maze.actions\";\nimport { resetGame } from \"./redux/App/app.actions\";\nimport gameOver from \"./assets/gameOver.gif\";\nimport gameWon from \"./assets/gameWon.gif\";\n\nconst App = (props) => {\n  const [width, setWidth] = useState(15);\n  const [height, setHeight] = useState(15);\n  const [difficulty, setDifficulty] = useState(5);\n  const [gameMode, setGameMode] = useState(\"manual-play\");\n  const { mazeId, maze, resetMaze, resetGame, isGameWon } = props;\n\n  useEffect(() => {\n    return mazeId && getMaze(mazeId);\n  }, [mazeId]);\n\n  useKeypress(\"ArrowLeft\", () => {\n    makeNextMove(mazeId, \"west\");\n  });\n\n  useKeypress(\"ArrowRight\", () => {\n    makeNextMove(mazeId, \"east\");\n  });\n\n  useKeypress(\"ArrowUp\", () => {\n    makeNextMove(mazeId, \"north\");\n  });\n\n  useKeypress(\"ArrowDown\", () => {\n    makeNextMove(mazeId, \"south\");\n  });\n\n  return (\n    <div className=\"app\">\n      <aside className=\"app__sidebar\">\n        <h1 className=\"app__title\">Save the pony 🦄 </h1>\n        <p className=\"app__description\">\n          Twilight Sparkle is in danger. Rescue her from the big bad Domokun!\n        </p>\n        <section className=\"app__parameters\">\n          <Slider\n            id=\"width\"\n            name=\"width\"\n            min=\"15\"\n            max=\"25\"\n            value={width}\n            onChange={setWidth}\n          />\n          <Slider\n            id=\"height\"\n            name=\"height\"\n            min=\"15\"\n            max=\"25\"\n            value={height}\n            onChange={setHeight}\n          />\n          <Slider\n            id=\"difficulty\"\n            name=\"difficulty\"\n            min=\"0\"\n            max=\"10\"\n            value={difficulty}\n            onChange={setDifficulty}\n          />\n        </section>\n        <section className=\"app__buttons\">\n          <button\n            className=\"app__buttons--play\"\n            onClick={\n              mazeId\n                ? () => {\n                    resetMaze();\n                    resetGame();\n                  }\n                : () => createMaze({ width, height, difficulty })\n            }\n          >\n            {mazeId ? \"Reset →\" : \"Play ↩︎\"}\n          </button>\n        </section>\n        <form className=\"app__mode\">\n          <input\n            type=\"radio\"\n            value=\"manual-play\"\n            checked={gameMode === \"manual-play\"}\n            id=\"manual-play\"\n            onChange={(e) => !mazeId && setGameMode(e.target.value)}\n            name=\"manual-play\"\n          />\n          <label htmlFor=\"manual-play\">Manual play</label>\n          <input\n            type=\"radio\"\n            value=\"autoplay\"\n            checked={gameMode === \"autoplay\"}\n            id=\"autoplay\"\n            onChange={(e) => !mazeId && setGameMode(e.target.value)}\n            name=\"autoplay\"\n          />\n          <label htmlFor=\"autoplay\">Autoplay</label>\n        </form>\n        {mazeId && (\n          <section className=\"app__controls\">\n            <p className=\"app__keyboard-controls\">\n              Use{\" \"}\n              <img\n                src={icons.keyboard}\n                className=\"app__keyboard-controls-icon\"\n                width={30}\n                height={30}\n                alt=\"arrow keys\"\n              />{\" \"}\n              to move the pony.\n            </p>\n          </section>\n        )}\n      </aside>\n      <div className=\"app__maze-container\">\n        {mazeId ? (\n          maze && (\n            <div>\n              <Maze data={maze} width={width} height={height} />\n              <p className=\"app__mouse-controls\">\n                <img\n                  src={icons.up}\n                  onClick={() => makeNextMove(mazeId, \"north\")}\n                  className=\"app__mouse-controls-up\"\n                  alt=\"arrow keys\"\n                />{\" \"}\n                <img\n                  src={icons.down}\n                  onClick={() => makeNextMove(mazeId, \"south\")}\n                  className=\"app__mouse-controls-down\"\n                  alt=\"arrow keys\"\n                />{\" \"}\n                <img\n                  src={icons.left}\n                  onClick={() => makeNextMove(mazeId, \"west\")}\n                  className=\"app__mouse-controls-left\"\n                  alt=\"arrow keys\"\n                />{\" \"}\n                <img\n                  src={icons.right}\n                  onClick={() => makeNextMove(mazeId, \"east\")}\n                  className=\"app__mouse-controls-right\"\n                  alt=\"arrow keys\"\n                />{\" \"}\n              </p>\n            </div>\n          )\n        ) : isGameWon === null ? (\n          <p className=\"app__instructions\">\n            Press on 'Play' to create the maze.\n          </p>\n        ) : isGameWon ? (\n          <div className=\"app__game-won\">\n            <img\n              src={gameWon}\n              width={400}\n              className=\"app__gif\"\n              alt=\"Game won\"\n            />\n            <p>Congrats, you saved the pony!</p>\n            <button\n              className=\"app__buttons--retry\"\n              onClick={() => createMaze({ width, height, difficulty })}\n            >\n              Play again\n            </button>\n          </div>\n        ) : (\n          <div className=\"app__game-over\">\n            <img src={gameOver} className=\"app__gif\" alt=\"Game over\" />\n            <p>Game over</p>\n            <button\n              className=\"app__buttons--retry\"\n              onClick={() => createMaze({ width, height, difficulty })}\n            >\n              Retry\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mazeId: state.maze.mazeId,\n    maze: state.maze.mazeContent,\n    isGameWon: state.app.isGameWon,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetMaze: () => dispatch(resetMaze()),\n    resetGame: () => dispatch(resetGame()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}